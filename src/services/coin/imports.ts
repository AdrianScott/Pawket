export const importmods: { [name: string]: string} = {
  "block_program_zero": "(a (q 4 (a 2 (c 2 (c 5 (c 11 (c 95 (c -65 (c (substr 639 23 47) ()))))))) ()) (c (q 2 (i 23 (q 4 (a 11 (c 47 (c 5 (c 95 (c 39 ()))))) (a 2 (c 2 (c 5 (c 11 (c 55 (c 47 (c 95 ())))))))) ()) 1) 1))",
  "calculate_synthetic_public_key": "(point_add 2 (pubkey_for_exp (sha256 2 5)))",
  "cat_v2": "(a (q 2 94 (c 2 (c (c 5 (c (sha256 52 5) (c 11 ()))) (c (a 23 47) (c 95 (c (a 46 (c 2 (c 23 ()))) (c (a 42 (c 2 (c 639 (c 1407 (c 2943 ()))))) (c -65 (c 383 (c 767 (c 1535 (c 3071 ())))))))))))) (c (q (((61 . 70) 2 51 . 60) (c . 1) 1 -53 . 2) ((not 2 (i 5 (q 2 50 (c 2 (c 13 (c (sha256 124 (sha256 52 36) (sha256 124 (sha256 124 (sha256 52 44) 9) (sha256 124 11 (sha256 52 ())))) ())))) (q . 11)) 1) (a (i (all (= (strlen 5) 34) (= (strlen 11) 34) (> 23 (q . -1))) (q 11 5 11 23) (q 8)) 1) (a (i 11 (q 2 (i (= (a 46 (c 2 (c 19 ()))) 2975) (q 2 86 (c 2 (c (a 19 (c 95 (c 23 (c 47 (c -65 (c 383 (c 27 ()))))))) (c 383 ())))) (q 8)) 1) (q 2 (i 23 (q 2 (i (not -65) (q . 383) (q 8)) 1) (q 8)) 1)) 1) 4 (c 5 39) (c (+ 11 87) 119)) ((a (i 5 (q 2 (i (= (a (i (= 17 88) (q . 89) ()) 1) (q . -113)) (q 2 38 (c 2 (c 13 (c 11 (c (c -71 377) ()))))) (q 2 122 (c 2 (c (a (i (= 17 88) (q 4 88 (c (a 118 (c 2 (c 19 (c 41 (c (sha256 52 91) (c 43 ())))))) 57)) (q 2 (i (= 17 120) (q 2 (i (not (a (i (= (q . 33) (strlen 41)) (q 2 (i (= (substr 41 () 52) 92) (q 1 . 1) ()) 1) ()) 1)) (q . 9) (q 8)) 1) (q . 9)) 1)) 1) (c (a (i (= 17 88) (q . 89) ()) 1) (c (a 38 (c 2 (c 13 (c 11 (c 23 ()))))) ())))))) 1) (q 4 () (c () 23))) 1) (a (i 5 (q 4 9 (a 86 (c 2 (c 13 (c 11 ()))))) (q . 11)) 1) 11 124 (sha256 52 40) (sha256 124 (sha256 124 (sha256 52 44) 5) (sha256 124 (a 50 (c 2 (c 7 (c (sha256 52 52) ())))) (sha256 52 ())))) (a (i (l 5) (q 11 (q . 2) (a 46 (c 2 (c 9 ()))) (a 46 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) (c (c 48 (c 95 ())) (a 126 (c 2 (c (c (c 47 5) (c 95 383)) (c (a 38 (c 2 (c 11 (c 5 (q ()))))) (c 23 (c -65 (c 383 (c (a 42 (c 2 (c 1279 (c (a 118 (c 2 (c 9 (c 2815 (c (sha256 52 45) (c 21 ())))))) (c 5887 ()))))) (c 1535 (c 3071 ()))))))))))) 2 90 (c 2 (c 95 (c 59 (c (a (i 23 (q 9 45 (a 42 (c 2 (c 39 (c (a 118 (c 2 (c 41 (c 87 (c (sha256 52 -71) (c 89 ())))))) (c -73 ())))))) ()) 1) (c 23 (c 5 (c 767 (c (c (c 120 (c (concat 92 (a 46 (c 2 (c (c 47 (c 383 ())) ())))) ())) (c (c 32 (c (sha256 -65 92 (a 46 (c 2 (c (c 21 (c (+ 383 (- 735 43) 767) ())) ())))) ())) 19)) ()))))))))) 1))",
  "chialisp_deserialisation": "(a (q 5 (a 62 (c 2 (c 5 ())))) (c (q ((-1 . 127) -33 . -65) ((a (i (= 11 (q . -128)) (q 4 () (c 5 ())) (q 2 (i (>s 11 24) (q 2 26 (c 2 (c (a (i (>s 11 28) (q 2 (i (>s 11 20) (q 8) (q 4 (concat (logand (q . 31) 11) (substr 5 () (q . 1))) (c (substr 5 (q . 1)) ()))) 1) (q 4 (logand (q . 63) 11) (c 5 ()))) 1) ()))) (q 4 11 (c 5 ()))) 1)) 1) 4 (substr 21 () 9) (c (substr 21 9) ())) (c (c 5 19) (c 43 ())) (a 22 (c 2 (c 9 (c (a 62 (c 2 (c 21 ()))) ())))) 2 (i (= (substr 5 () (q . 1)) 16) (q 2 46 (c 2 (c (a 62 (c 2 (c (substr 5 (q . 1)) ()))) ()))) (q 2 18 (c 2 (c (substr 5 (q . 1)) (c (substr 5 () (q . 1)) ()))))) 1) 1))",
  "counter": "(a (q 4 (c 56 (c (a 58 (c 2 (c 5 (c (a 46 (c 2 (c 23 (c (a 38 (c 2 (c 47 ()))) ())))) ())))) (c 39 ()))) (a 50 (c 2 (c 11 (c 47 (q 1)))))) (c (q ((50 2 . 51) (c . 1) 1 . 2) (((a (i 5 (q 2 34 (c 2 (c 13 (c (sha256 60 (sha256 52 36) (sha256 60 (sha256 60 (sha256 52 44) 9) (sha256 60 11 (sha256 52 ())))) ())))) (q . 11)) 1) 2 (i 11 (q 4 (c 56 (c (a 42 (c 2 (c 5 (c (c (c 23 19) ()) ())))) (q ()))) (c (c 16 (c 35 (c (a 62 (c 2 (c (c 19 (c 23 ())) ()))) ()))) (a 50 (c 2 (c 5 (c 27 (c (+ 23 (q . 1)) ()))))))) ()) 1) (a 54 (c 2 (c 5 (c (a 62 (c 2 (c 11 ()))) ())))) 2 54 (c 2 (c 5 (c (a 62 (c 2 (c 11 ()))) (c (a 62 (c 2 (c 5 ()))) ()))))) ((a (i (l 5) (q 4 41 (a 38 (c 2 (c 13 ())))) ()) 1) 11 60 (sha256 52 40) (sha256 60 (sha256 60 (sha256 52 44) 5) (sha256 60 (a 34 (c 2 (c 7 (c (sha256 52 52) ())))) (sha256 52 ())))) (a (i (l 11) (q 16 19 (a 46 (c 2 (c 5 (c 27 ()))))) (q . 21)) 1) 2 (i (l 5) (q 11 (q . 2) (a 62 (c 2 (c 9 ()))) (a 62 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "decompress_coin_spend_entry": "(c 79 (c (a 5 (c 2 (c 11 (c 303 (c 23 ()))))) (c 335 431)))",
  "decompress_coin_spend_entry_with_prefix": "(c 71 (c (a 5 (c 2 (c 11 (c -105 (q 0xff018080))))) (c -89 -41)))",
  "decompress_puzzle": "(a 2 (c (concat 5 11 23) ()))",
  "delegated_tail": "(a (q 4 (c 4 (c 5 (c (a 6 (c 2 (c 639 ()))) ()))) (a 639 (c 11 (c 23 (c 47 (c 95 (c -65 1407))))))) (c (q 49 2 (i (l 5) (q 11 (q . 2) (a 6 (c 2 (c 9 ()))) (a 6 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "did_innerpuz": "(a (q 2 (i -65 (q 2 5 383) (q 2 (i (all (= (a 126 (c 2 (c 6143 ()))) 11) (> 23 ())) (q 4 (c 40 (c 383 ())) (c (c 52 (c 767 (c 383 (c (c 767 ()) ())))) (c (c 56 (c 12287 ())) (a 38 (c 2 (c 47 (c 23 (c 6143 (c 12287 (c 767 (c 1535 (c 3071 (q ()))))))))))))) (q 8)) 1)) 1) (c (q (((49 . 61) 73 . 70) (a . 51) 60 . 4) ((q . 1) 2 2 (i 5 (q 2 58 (c 2 (c 13 (c (sha256 42 (sha256 34 60) (sha256 42 (sha256 42 (sha256 34 50) 9) (sha256 42 11 (sha256 34 ())))) ())))) (q . 11)) 1) ((a (i 23 (q 2 (i 319 (q 4 (c 48 (c (sha256 (sha256 (a 54 (c 2 (c 5 (c 39 (c 575 (c 1343 (c 2879 ()))))))) (a 126 (c 2 (c (a 46 (c 2 (c 47 (c 95 (c 383 ()))))) ())))) 47) ())) (a 38 (c 2 (c 5 (c 11 (c 55 (c 47 (c 95 (c 447 (c 383 (c (+ 767 (q . 1)) ()))))))))))) (q 2 38 (c 2 (c 5 (c 55 (c 47 (c 95 (c 447 (c 383 (c 767 ())))))))))) 1) (q 2 (i (> 767 (- 11 (q . 1))) (q 4 (c 32 (c 383 (c 95 ()))) ()) (q 8)) 1)) 1) 11 23 (a 94 (c 2 (c 9 (c 47 (c (a 126 (c 2 (c (c 9 (c 11 29)) ()))) ()))))) 95) (c (q . 1) (c (c 44 (c 5 ())) (c (c 32 (c 23 (c 11 ()))) ()))) (sha256 42 (sha256 34 36) (sha256 42 (sha256 42 (sha256 34 50) 5) (sha256 42 (a 58 (c 2 (c 7 (c (sha256 34 34) ())))) (sha256 34 ())))) 2 (i (l 5) (q 11 (q . 2) (a 126 (c 2 (c 9 ()))) (a 126 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "everything_with_signature": "(a (q 4 (c 2 (c 5 (c 95 ()))) ()) (c (q . 50) 1))",
  "generator_for_single_coin": "(a (q 2 12 (c 2 (c (f (a 5 (c 10 (c 19 ())))) (c 23 ())))) (c (q ((= (sha256 9 (a 14 (c 2 (c 21 ()))) 45) 11) 2 (i 5 (q 2 (i (a 8 (c 2 (c 9 (c 11 ())))) (q 4 41 (c -71 ())) (q 2 12 (c 2 (c 13 (c 11 ()))))) 1) (q 8)) 1) (a (q 5 (a 62 (c 2 (c 5 ())))) (c (q ((-1 . 127) -33 . -65) ((a (i (= 11 (q . -128)) (q 4 () (c 5 ())) (q 2 (i (>s 11 24) (q 2 26 (c 2 (c (a (i (>s 11 28) (q 2 (i (>s 11 20) (q 8) (q 4 (concat (logand (q . 31) 11) (substr 5 () (q . 1))) (c (substr 5 (q . 1)) ()))) 1) (q 4 (logand (q . 63) 11) (c 5 ()))) 1) ()))) (q 4 11 (c 5 ()))) 1)) 1) 4 (substr 21 () 9) (c (substr 21 9) ())) (c (c 5 19) (c 43 ())) (a 22 (c 2 (c 9 (c (a 62 (c 2 (c 21 ()))) ())))) 2 (i (= (substr 5 () (q . 1)) 16) (q 2 46 (c 2 (c (a 62 (c 2 (c (substr 5 (q . 1)) ()))) ()))) (q 2 18 (c 2 (c (substr 5 (q . 1)) (c (substr 5 () (q . 1)) ()))))) 1) 1)) 2 (i (l 5) (q 11 (q . 2) (a 14 (c 2 (c 9 ()))) (a 14 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "genesis_by_coin_id": "(a (i 47 (q 8) (q 2 (i (= 45 2) () (q 8)) 1)) 1)",
  "genesis_by_puzzle_hash": "(a (i 47 (q 8) (q 2 (i (= (sha256 319 2 703) 45) () (q 8)) 1)) 1)",
  "index_lock": "(a (q 4 (c (q . 62) (c (a 2 (c 2 (c 5 ()))) ())) ()) (c (q 2 (i (l 5) (q 11 (q . 2) (a 2 (c 2 (c 9 ()))) (a 2 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "lock.inner.puzzle": "(q ())",
  "nft_metadata_updater_default": "(a (q 4 (c (a (i (all 39 55) (q 2 (i (any (= 39 (q . 28021)) (= 39 (q . 27765)) (= 39 (q . 117))) (q 2 2 (c 2 (c 5 (c 39 (c 55 ()))))) (q . 5)) 1) (q . 5)) 1) (c 11 ())) (q ())) (c (q 2 (i 5 (q 2 (i (= 17 11) (q 4 (c 11 (c 23 25)) 13) (q 4 9 (a 2 (c 2 (c 13 (c 11 (c 23 ()))))))) 1) ()) 1) 1))",
  "nft_metadata_updater_updateable": "(a (q 4 (c (a (i 39 (q 2 2 (c 2 (c 5 (c 39 ())))) (q . 5)) 1) (c (a (i (= (strlen 87) (q . 32)) (q . 87) (q . 11)) 1) ())) (q ())) (c (q 2 (i 5 (q 2 (i (= 17 (q . 117)) (q 4 (c (q . 117) (c 11 25)) 13) (q 4 9 (a 2 (c 2 (c 13 (c 11 ())))))) 1) ()) 1) 1))",
  "nft_ownership_layer": "(a (q 2 38 (c 2 (c 5 (c 23 (c 11 (c (a 47 95) ())))))) (c (q ((-21172 2 . 51) (62 . 4) -10 . 1) ((q . 2) (a (i 5 (q 2 42 (c 2 (c 13 (c (sha256 50 (sha256 60 52) (sha256 50 (sha256 50 (sha256 60 34) 9) (sha256 50 11 (sha256 60 ())))) ())))) (q . 11)) 1) 4 (c 56 (c (a 54 (c 2 (c 5 (c 39 (c (a 46 (c 2 (c (a (i -81 (q . -81) (q . 11)) 1) ()))) (c (sha256 60 79) (c (sha256 60 5) ()))))))) 55)) 367) ((a 62 (c 2 (c 5 (c 11 (c 23 (c 47 (c 47 (q () ())))))))) 11 50 (sha256 60 40) (sha256 50 (sha256 50 (sha256 60 34) 5) (sha256 50 (a 42 (c 2 (c 7 (c (sha256 60 60) ())))) (sha256 60 ())))) (a (i (l 5) (q 11 (q . 2) (a 46 (c 2 (c 9 ()))) (a 46 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 2 (i 95 (q 2 (i (= 287 56) (q 2 (i (= (logand 1439) 60) (q 2 (i (not -65) (q 2 62 (c 2 (c 5 (c 11 (c 23 (c 47 (c -33 (c 415 (c 383 ()))))))))) (q 8)) 1) (q 4 -97 (a 62 (c 2 (c 5 (c 11 (c 23 (c 47 (c -33 (c -65 (c 383 ()))))))))))) 1) (q 2 (i (= 287 44) (q 2 (i (not 383) (q 4 (c 36 (c (concat 16 (a 46 (c 2 (c 415 ())))) ())) (a 62 (c 2 (c 5 (c 11 (c 23 (c 47 (c -33 (c -65 (c (a 11 (c 23 (c 47 (c 415 ())))) ())))))))))) (q 8)) 1) (q 2 (i (= 287 36) (q 2 (i (not (a (i (= (q . 34) (strlen 671)) (q 2 (i (= (substr 671 () (q . 2)) 16) (q 1 . 1) ()) 1) ()) 1)) (q 4 -97 (a 62 (c 2 (c 5 (c 11 (c 23 (c 47 (c -33 (c -65 (c 383 ())))))))))) (q 8)) 1) (q 4 -97 (a 62 (c 2 (c 5 (c 11 (c 23 (c 47 (c -33 (c -65 (c 383 ()))))))))))) 1)) 1)) 1) (q 2 58 (c 2 (c 5 (c 11 (c -65 (c (a (i 383 (q . 383) (q 2 11 (c 23 (c 47 (q ()))))) 1) ()))))))) 1) 1))",
  "nft_ownership_transfer_program_one_way_claim_with_royalties": "(a (q 2 (i -65 (q 4 319 (c () (c (a (i (all 319 (not (= 319 47))) (q 4 (c 16 (c (sha256 (a 46 (c 2 (c 9 (c 1471 (c (a 62 (c 2 (c (c 9 (c 319 29)) ()))) ()))))) 21) ())) (a 22 (c 2 (c 11 (c 23 (c 703 (c 21 ()))))))) (q 2 22 (c 2 (c 11 (c 23 (c 703 (c 21 ()))))))) 1) ()))) (q 4 47 (q () ()))) 1) (c (q ((63 . 2) 4 1 . 1) (10000 2 2 (i 5 (q 2 58 (c 2 (c 13 (c (sha256 42 (sha256 44 20) (sha256 42 (sha256 42 (sha256 44 60) 9) (sha256 42 11 (sha256 44 ())))) ())))) (q . 11)) 1) (a (i 23 (q 4 (c 16 (c (sha256 -89 (a 62 (c 2 (c (c 47 (c (c 5 (c (f (divmod (* 71 11) 18)) (c (c 5 ()) ()))) ())) ())))) ())) (a 22 (c 2 (c 5 (c 11 (c 55 (c 47 ()))))))) ()) 1) (sha256 42 (sha256 44 24) (sha256 42 (sha256 42 (sha256 44 60) 5) (sha256 42 (a 58 (c 2 (c 7 (c (sha256 44 44) ())))) (sha256 44 ())))) 2 (i (l 5) (q 11 (q . 2) (a 62 (c 2 (c 9 ()))) (a 62 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "nft_state_layer": "(a (q 2 62 (c 2 (c 5 (c (a 47 95) (c () (c (c (c 11 (c 23 ())) (q ())) (q ()))))))) (c (q ((a . 51) 4 1 . 1) (a 2 (i 5 (q 2 26 (c 2 (c 13 (c (sha256 18 (sha256 44 20) (sha256 18 (sha256 18 (sha256 44 60) 9) (sha256 18 11 (sha256 44 ())))) ())))) (q . 11)) 1) (sha256 18 (sha256 44 16) (sha256 18 (sha256 18 (sha256 44 60) 5) (sha256 18 (a 26 (c 2 (c 7 (c (sha256 44 44) ())))) (sha256 44 ())))) (a (i (l 5) (q 11 (q . 2) (a 46 (c 2 (c 9 ()))) (a 46 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 2 (i 11 (q 2 (i (= 35 24) (q 2 (i (logand -77 44) (q 2 (i (not 23) (q 2 62 (c 2 (c 5 (c 27 (c 51 (c 47 (c 95 ()))))))) (q 8)) 1) (q 4 19 (a 62 (c 2 (c 5 (c 27 (c 23 (c 47 (c 95 ()))))))))) 1) (q 2 (i (= 35 (q . -24)) (q 2 62 (c 2 (c 5 (c 27 (c 23 (c (a (i (all (= (a 46 (c 2 (c 83 ()))) 335) (not 95)) (q 2 83 (c -113 (c 335 (c -77 ())))) (q 8)) 1) (c 44 ()))))))) (q 4 19 (a 62 (c 2 (c 5 (c 27 (c 23 (c 47 (c 95 ()))))))))) 1)) 1) (q 4 (c 24 (c (a 22 (c 2 (c 5 (c 39 (c (sha256 44 335) (c (a 46 (c 2 (c -113 ()))) (c (sha256 44 5) ()))))))) 55)) -81)) 1) 1))",
  "p2_conditions": "(c (q . 1) 2)",
  "p2_delegated_conditions": "(a (q 4 (c 4 (c 5 (c (a 6 (c 2 (c 11 ()))) ()))) 11) (c (q 50 2 (i (l 5) (q 11 (q . 2) (a 6 (c 2 (c 9 ()))) (a 6 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "p2_delegated_puzzle": "(a (q 4 (c 4 (c 5 (c (a 6 (c 2 (c 11 ()))) ()))) (a 11 23)) (c (q 50 2 (i (l 5) (q 11 (q . 2) (a 6 (c 2 (c 9 ()))) (a 6 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "p2_delegated_puzzle_or_hidden_puzzle": "(a (q 2 (i 11 (q 2 (i (= 5 (point_add 11 (pubkey_for_exp (sha256 11 (a 6 (c 2 (c 23 ()))))))) (q 2 23 47) (q 8)) 1) (q 4 (c 4 (c 5 (c (a 6 (c 2 (c 23 ()))) ()))) (a 23 47))) 1) (c (q 50 2 (i (l 5) (q 11 (q . 2) (a 6 (c 2 (c 9 ()))) (a 6 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "p2_m_of_n_delegate_direct": "(a (q 2 (i (= 5 (a 22 (c 2 (c 23 ())))) (q 2 12 (c 2 (c (a 10 (c 2 (c 23 (c 11 ())))) (c (a 30 (c 2 (c 47 ()))) (c 47 (c 95 ())))))) (q 8)) 1) (c (q (49 2 (i 5 (q 4 (c 8 (c 9 (c 11 ()))) (a 12 (c 2 (c 13 (c 11 (c 23 (c 47 ()))))))) (q 2 23 47)) 1) (a (i 5 (q 2 (i 9 (q 4 19 (a 10 (c 2 (c 13 (c 27 ()))))) (q 2 10 (c 2 (c 13 (c 27 ()))))) 1) ()) 1) (a (i 5 (q 16 (a 22 (c 2 (c 13 ()))) (a (i 9 (q 1 . 1) ()) 1)) ()) 1) 2 (i (l 5) (q 11 (q . 2) (a 30 (c 2 (c 9 ()))) (a 30 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "p2_puzzle_hash": "(a (q 2 (i (= 5 (a 2 (c 2 (c 11 ())))) (q 2 11 23) (q 8)) 1) (c (q 2 (i (l 5) (q 11 (q . 2) (a 2 (c 2 (c 9 ()))) (a 2 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "p2_singleton": "(a (q 4 (c 24 (c (sha256 (a 46 (c 2 (c 5 (c 47 (c (a 62 (c 2 (c (c 5 (c 11 23)) ()))) ()))))) 95) ())) (c (c 44 (q 36)) (c (c 16 (c 95 ())) ()))) (c (q ((70 . 63) 2 60 . 4) (q 1 . 2) (a (i 5 (q 2 22 (c 2 (c 13 (c (sha256 58 (sha256 18 60) (sha256 58 (sha256 58 (sha256 18 42) 9) (sha256 58 11 (sha256 18 ())))) ())))) (q . 11)) 1) (sha256 58 (sha256 18 20) (sha256 58 (sha256 58 (sha256 18 42) 5) (sha256 58 (a 22 (c 2 (c 7 (c (sha256 18 18) ())))) (sha256 18 ())))) 2 (i (l 5) (q 11 (q . 2) (a 62 (c 2 (c 9 ()))) (a 62 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "p2_singleton_or_delayed_puzhash": "(a (q 2 (i 383 (q 4 (c 56 (c (sha256 (a 46 (c 2 (c 5 (c -65 (c (a 62 (c 2 (c (c 5 (c 11 23)) ()))) ()))))) 383) ())) (c (c 60 (q 36)) (c (c 40 (c 383 ())) ()))) (q 4 (c 36 (c 47 ())) (c (c 44 (c 95 (c -65 ()))) (c (c 16 (c -65 ())) ())))) 1) (c (q ((73 70 . 63) (80 . 2) 51 . 60) (c 1 . 1) (a 2 (i 5 (q 2 54 (c 2 (c 13 (c (sha256 38 (sha256 42 18) (sha256 38 (sha256 38 (sha256 42 58) 9) (sha256 38 11 (sha256 42 ())))) ())))) (q . 11)) 1) (sha256 38 (sha256 42 52) (sha256 38 (sha256 38 (sha256 42 58) 5) (sha256 38 (a 54 (c 2 (c 7 (c (sha256 42 42) ())))) (sha256 42 ())))) 2 (i (l 5) (q 11 (q . 2) (a 62 (c 2 (c 9 ()))) (a 62 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "pool_member_innerpuz": "(a (q 2 (i 767 (q 2 22 (c 2 (c 5 (c 1215 (c 1727 (c 383 (c (sha256 (logior 47 (logand (q . 0x00ffffffffffffffffffffffffffffffff) 767)) 11 383) ()))))))) (q 4 (c 8 (c 23 (c (a 30 (c 2 (c 383 ()))) ()))) (c (c 28 (c 95 (c 1727 ()))) ()))) 1) (c (q (50 61 . 51) 62 (c (c 28 (c 11 (c 23 ()))) (c (c 28 (c 5 (c 47 ()))) (c (c 10 (c 95 ())) (c (c 20 (c (sha256 95 (q . 36)) ())) ())))) 2 (i (l 5) (q 11 (q . 2) (a 30 (c 2 (c 9 ()))) (a 30 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "pool_waitingroom_innerpuz": "(a (q 2 (i 383 (q 4 (c 28 (c 95 ())) (c (c 18 (c 1535 (c 1727 ()))) (c (c 8 (c 23 (c (a 30 (c 2 (c (c 1535 (c 767 ())) ()))) ()))) ()))) (q 2 22 (c 2 (c 5 (c 1215 (c 1727 (c 767 (c (sha256 (logior 47 (logand (q . 0x00ffffffffffffffffffffffffffffffff) 1535)) 11 767) ())))))))) 1) (c (q (50 61 . 82) (51 . 62) (c (c 18 (c 11 (c 23 ()))) (c (c 18 (c 5 (c 47 ()))) (c (c 26 (c 95 ())) (c (c 20 (c (sha256 95 (q . 36)) ())) ())))) 2 (i (l 5) (q 11 (q . 2) (a 30 (c 2 (c 9 ()))) (a 30 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "rl": "(a (q 2 (i (= -65 36) (q 4 (c 48 (c 95 (c (a 62 (c 2 (c (c -65 -1) ()))) ()))) -1) (q 4 (c 48 (c 5 (c (a 62 (c 2 (c (c -65 -1) ()))) ()))) (a (i (= -65 60) (q 2 46 (c 2 (c 11 (c 23 (c 47 (c -1 ())))))) (q 2 34 (c 2 (c 47 (c -1 ()))))) 1))) 1) (c (q ((((a (i (> 5 11) (q 1 . 1) (q 2 (i (= 5 11) (q 1 . 1) ()) 1)) 1) . 49) 82 . 70) (i . 51) 60 . 1) (((a (i (a (i (= (sha256 3067 19 1531) 379) (q 1 . 1) (q 2 (i (= 5 379) (q 1 . 1) ()) 1)) 1) (q 4 (a 38 (c 2 (c 379 (c 19 (c 763 ()))))) (c (a 42 (c 2 (c 43 (c 91 (c -69 ()))))) (c (a 58 (c 2 (c 19 (c (+ -69 763) ())))) ()))) (q (x))) 1) 4 52 (c 5 (c (- 11 (+ 23 47)) ()))) (c 44 (c (sha256 5 11 23) ())) 4 52 (c 5 (c 11 ()))) ((c 56 (c (sha256 5 11 23) ())) 2 (i (a 32 (c 2 (c (* 5 23) (c (* 11 47) ())))) (q 4 40 (c 5 ())) (q (x))) 1) (a (i (a (i (= (sha256 6127 -81 12271) 79) (q 1 . 1) (q 2 (i (= 23 79) (q 1 . 1) ()) 1)) 1) (q 4 (a 54 (c 2 (c 3055 (c 1519 (c 5 (c 11 ())))))) (c (a 50 (c 2 (c -81 (c 367 (c 1519 (c 24559 ())))))) (c (a 38 (c 2 (c 79 (c -81 (c 367 ()))))) (c (a 58 (c 2 (c 751 (c 1519 ())))) ())))) (q (x))) 1) 2 (i (l 5) (q 11 (q . 2) (a 62 (c 2 (c 9 ()))) (a 62 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "rl_aggregation": "(a (q 4 (c 6 (c 11 ())) (c (c 4 (c (sha256 (sha256 23 5 47) 11) ())) ())) (c (q 61 . 70) 1))",
  "rom_bootstrap_generator": "(a (q 2 12 (c 2 (c (a 5 (c 8 (c 19 ()))) ()))) (c (q ((a (q 5 (a 62 (c 2 (c 5 ())))) (c (q ((-1 . 127) -33 . -65) ((a (i (= 11 (q . -128)) (q 4 () (c 5 ())) (q 2 (i (>s 11 24) (q 2 26 (c 2 (c (a (i (>s 11 28) (q 2 (i (>s 11 20) (q 8) (q 4 (concat (logand (q . 31) 11) (substr 5 () (q . 1))) (c (substr 5 (q . 1)) ()))) 1) (q 4 (logand (q . 63) 11) (c 5 ()))) 1) ()))) (q 4 11 (c 5 ()))) 1)) 1) 4 (substr 21 () 9) (c (substr 21 9) ())) (c (c 5 19) (c 43 ())) (a 22 (c 2 (c 9 (c (a 62 (c 2 (c 21 ()))) ())))) 2 (i (= (substr 5 () (q . 1)) 16) (q 2 46 (c 2 (c (a 62 (c 2 (c (substr 5 (q . 1)) ()))) ()))) (q 2 18 (c 2 (c (substr 5 (q . 1)) (c (substr 5 () (q . 1)) ()))))) 1) 1)) 4 (a 22 (c 2 (c 9 ()))) 13) (c 9 (c (a 30 (c 2 (c 21 ()))) (c 45 (c (a 21 93) 125)))) (a (i 5 (q 4 (a 10 (c 2 (c 9 ()))) (a 22 (c 2 (c 13 ())))) ()) 1) 2 (i (l 5) (q 11 (q . 2) (a 30 (c 2 (c 9 ()))) (a 30 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "settlement_payments": "(a (q 2 10 (c 2 (c 3 ()))) (c (q (51 . 62) (a (i 5 (q 4 (c 12 (c (a 30 (c 2 (c 9 ()))) ())) (a 22 (c 2 (c 25 (c (a 10 (c 2 (c 13 ()))) ()))))) ()) 1) (a (i 5 (q 4 (c 8 9) (a 22 (c 2 (c 13 (c 11 ()))))) (q . 11)) 1) 2 (i (l 5) (q 11 (q . 2) (a 30 (c 2 (c 9 ()))) (a 30 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "sha256tree_module": "(a (q 2 2 (c 2 (c 5 ()))) (c (q 2 (i (l 5) (q 11 (q . 2) (a 2 (c 2 (c 9 ()))) (a 2 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "singleton_launcher": "(a (q 4 (c 4 (c 5 (c 11 ()))) (c (c 10 (c (a 14 (c 2 (c (c 5 (c 11 (c 23 ()))) ()))) ())) ())) (c (q 51 60 2 (i (l 5) (q 11 (q . 2) (a 14 (c 2 (c 9 ()))) (a 14 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))",
  "singleton_top_layer": "(a (q 2 (i (logand 47 (q . 1)) (q 2 54 (c 2 (c 5 (c 23 (c (a 38 (c 2 (c 11 ()))) (c 47 (c 11 (c 95 ())))))))) (q 8)) 1) (c (q (((70 . 2) 51 . 4) (q . 1) 2 (a (i 5 (q 2 92 (c 2 (c 13 (c (sha256 44 (sha256 36 56) (sha256 44 (sha256 44 (sha256 36 52) 9) (sha256 44 11 (sha256 36 ())))) ())))) (q . 11)) 1) 2 (i 11 (q 2 50 (c 2 (c 5 (c 11 (c 23 (c (a 42 (c 2 (c (a (i (= 35 40) (q . -77) ()) 1) ()))) ())))))) (q 2 (i 23 () (q 8)) 1)) 1) (((sha256 (sha256 23 (a 58 (c 2 (c 9 (c 47 (c (a 38 (c 2 (c 5 ()))) ()))))) 95) 11 -65) 2 (i (not (all 79 23)) (q 2 126 (c 2 (c 111 (c (c (a (i 79 (q 4 35 (c (a 58 (c 2 (c 9 (c 83 (c (a 38 (c 2 (c 5 ()))) ()))))) (c -77 ()))) (q . 19)) 1) (a 124 (c 2 (c 5 (c 27 (c (any 79 23) ())))))) ())))) (q 8)) 1) (c (= (logand 5 (q . 1)) (q . 1)) (= 5 (q . -113))) 11 44 (sha256 36 48) (sha256 44 (sha256 44 (sha256 36 52) 5) (sha256 44 (a 92 (c 2 (c 7 (c (sha256 36 36) ())))) (sha256 36 ())))) ((a (i (l 5) (q 11 (q . 2) (a 38 (c 2 (c 9 ()))) (a 38 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 2 94 (c 2 (c 5 (c 11 (c (a 58 (c 2 (c 9 (c 23 (c (a 38 (c 2 (c 5 ()))) ()))))) (c 23 (c 47 (c 95 (c -65 ()))))))))) (c (c 32 (c 23 ())) (a 124 (c 2 (c 5 (c (a 383 (c (c (c 23 47) (c (c 95 -65) (c 11 5))) 767)) (q ())))))) (a 46 (c 2 (c 5 (c 11 (c (a (i 59 (q 2 34 (c 2 (c 5 (c 23 (c 19 (c 43 (c 91 (c 95 ())))))))) (q 2 (i (= 21 (sha256 19 29 43)) (q 11 21 23 95) (q 8)) 1)) 1) (c 23 (c 47 (c 95 (c -65 (c 383 ())))))))))) 2 (i 5 (q . 27) (q . 11)) 1) 1))",
  "singleton_top_layer_v1_1": "(a (q 2 (i (logand 47 52) (q 4 (c 32 (c 47 ())) (c (a 62 (c 2 (c 5 (c (a 42 (c 2 (c 39 (c (a (i 119 (q 2 54 (c 2 (c 9 (c 87 (c (a 46 (c 2 (c 5 ()))) ()))))) (q . 29)) 1) (c (a (i 119 (q . -73) (q . 87)) 1) ()))))) (c 119 ()))))) (a 58 (c 2 (c 5 (c (a 11 95) (q ()))))))) (q 8)) 1) (c (q (((73 . 71) 2 . 51) (c . 1) 1 . 2) ((not 2 (i 5 (q 2 50 (c 2 (c 13 (c (sha256 60 (sha256 52 36) (sha256 60 (sha256 60 (sha256 52 44) 9) (sha256 60 11 (sha256 52 ())))) ())))) (q . 11)) 1) (a (i (all (= (strlen 5) 34) (= (strlen 11) 34) (> 23 (q . -1))) (q 11 5 11 23) (q 8)) 1) 2 (i 11 (q 2 (i (a 38 (c 2 (c 19 ()))) (q 2 (i (not 23) (q 2 (i (= -77 (q . -113)) (q 2 58 (c 2 (c 5 (c 27 (c 52 ()))))) (q 4 (c 35 (c (a 54 (c 2 (c 9 (c 83 (c (a 46 (c 2 (c 5 ()))) ()))))) 115)) (a 58 (c 2 (c 5 (c 27 (c 52 ()))))))) 1) (q 8)) 1) (q 4 19 (a 58 (c 2 (c 5 (c 27 (c 23 ()))))))) 1) (q 2 (i 23 () (q 8)) 1)) 1) ((a (i (= 9 56) (q 2 (i (logand 45 (q . 1)) (q 1 . 1) ()) 1) ()) 1) 11 60 (sha256 52 40) (sha256 60 (sha256 60 (sha256 52 44) 5) (sha256 60 (a 50 (c 2 (c 7 (c (sha256 52 52) ())))) (sha256 52 ())))) (a (i (l 5) (q 11 (q . 2) (a 46 (c 2 (c 9 ()))) (a 46 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 2 (i (any 23 (= 11 21)) (q 4 48 (c 11 ())) (q 8)) 1) 1))",
  "test_generator_deserialize": "(a 2 (c 11 ()))",
  "test_multiple_generator_input_arguments": "(a (q 4 (a 4 (c 2 (c 5 (c 11 (c 383 (c 767 (c (a 6 (c 2 (c 1535 (c 23 (c 47 (c 95 (c -65 ()))))))) ()))))))) ()) (c (q (a (i 23 (q 4 (a 11 (c 47 (c 5 (c 95 (c 39 ()))))) (a 4 (c 2 (c 5 (c 11 (c 55 (c 47 (c 95 ())))))))) ()) 1) 14 (substr 9 11 23) (substr 21 47 95)) 1))"
};